{"ast":null,"code":"var _jsxFileName = \"/Users/and___young/Desktop/portfolio/src/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = _ref => {\n  let {\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n  } = _ref;\n  // buttonstyle이 따로 지정되지 않으면 가장 기본인 배열의 0번째가 설정된다. \n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]; // buttonsize가 지정되지 않으면 가장 기본 사이즈인 0번재 btn-medium이 설정된다. \n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return (\n    /*#__PURE__*/\n    // children안에 어떤 내용을 입력해도 버튼 이름이 된다. \n    _jsxDEV(Link, {\n      to: \"/sign-up\",\n      className: \"btn-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n        onClick: onClick,\n        type: type,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Link","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"sources":["/Users/and___young/Desktop/portfolio/src/Button.js"],"sourcesContent":["import React from 'react';\nimport './Button.css';\nimport {Link} from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({children, type, onClick, buttonStyle, buttonSize}) => {\n    // buttonstyle이 따로 지정되지 않으면 가장 기본인 배열의 0번째가 설정된다. \n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    // buttonsize가 지정되지 않으면 가장 기본 사이즈인 0번재 btn-medium이 설정된다. \n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n    return (\n        // children안에 어떤 내용을 입력해도 버튼 이름이 된다. \n        <Link to = '/sign-up' className = 'btn-mobile'>\n            <button \n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n            onClick={onClick}\n            type={type}\n            >\n                {children} \n            </button>\n        </Link>\n    );\n    \n};"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AAEA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAwD;EAAA,IAAvD;IAACC,QAAD;IAAWC,IAAX;IAAiBC,OAAjB;IAA0BC,WAA1B;IAAuCC;EAAvC,CAAuD;EAC1E;EACA,MAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E,CAF0E,CAG1E;;EACA,MAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;EAEA;IAAA;IACI;IACA,QAAC,IAAD;MAAM,EAAE,EAAG,UAAX;MAAsB,SAAS,EAAG,YAAlC;MAAA,uBACI;QACA,SAAS,EAAG,OAAMO,gBAAiB,IAAGE,eAAgB,EADtD;QAEA,OAAO,EAAEL,OAFT;QAGA,IAAI,EAAED,IAHN;QAAA,UAKKD;MALL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAFJ;AAaH,CAnBM;KAAMD,M"},"metadata":{},"sourceType":"module"}